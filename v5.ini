[binaries]
c = 'arm-none-eabi-gcc'
cpp = 'arm-none-eabi-g++'
ar = 'arm-none-eabi-ar'
objcopy = 'arm-none-eabi-objcopy'
objdump = 'arm-none-eabi-objdump'
strip = 'arm-none-eabi-strip'
size = 'arm-none-eabi-size'

[host_machine]
system = 'none'
kernel = 'none'
cpu_family = 'arm'
cpu = 'cortex-a9'
endian = 'little'

[constants]
arch_flags = ['-mcpu=cortex-a9', '-mfpu=neon-fp16', '-mfloat-abi=hard']
optimizations = ['-ffunction-sections', '-fdata-sections', '-fno-strict-aliasing']
format_flags = ['-fdiagnostics-color']
stdlib_conf = ['-D_POSIX_MONOTONIC_CLOCK']
link_flags = ['-Wl,--gc-sections', '-Wl,--no-warn-rwx-segments']
sys_links = ['-nostdlib', '-lc', '-lm', '-lgcc', '-lstdc++']
linkerscript = ['-T../firmware/v5.ld']

[built-in options]
c_args = arch_flags + optimizations + format_flags + stdlib_conf
cpp_args = c_args
c_link_args = c_args + sys_links + link_flags + linkerscript
cpp_link_args = c_link_args
c_std = 'gnu2x'
cpp_std = 'gnu++23'
default_library = 'static'
prefer_static = 'true'
buildtype = 'minsize'
wrap_mode = 'forcefallback'
warning_level = '3'
debug = true
